--- origsrc/filezilla-3.1.1.1/src/engine/ftpcontrolsocket.cpp	2008-08-11 09:29:03.000000000 -0500
+++ src/filezilla-3.1.1.1/src/engine/ftpcontrolsocket.cpp	2008-08-13 22:11:06.736150800 -0500
@@ -3692,7 +3692,9 @@
 {
 	// Local IP should work. Only a complete moron would use IPv6
 	// and NAT at the same time.
+#ifdef AF_INET6
 	if (GetAddressFamily() != AF_INET6)
+#endif
 	{
 		int mode = m_pEngine->GetOptions()->GetOptionVal(OPTION_EXTERNALIPMODE);
 
@@ -3888,9 +3890,11 @@
 		if (pData->bPasv)
 		{
 			bool parsed;
+#ifdef AF_INET6
 			if (GetAddressFamily() == AF_INET6)
 				parsed = ParseEpsvResponse(pData);
 			else
+#endif
 				parsed = ParsePasvResponse(pData);
 			if (!parsed)
 			{
@@ -4021,9 +4025,11 @@
 		if (pData->bPasv)
 		{
 			pData->bTriedPasv = true;
+#ifdef AF_INET6
 			if (GetAddressFamily() == AF_INET6)
 				cmd = _T("EPSV");
 			else
+#endif
 				cmd = _T("PASV");
 		}
 		else
@@ -4038,9 +4044,11 @@
 				if (portArgument != _T(""))
 				{
 					pData->bTriedActive = true;
+#ifdef AF_INET6
 					if (GetAddressFamily() == AF_INET6)
 						cmd = _T("EPRT " + portArgument);
 					else
+#endif
 						cmd = _T("PORT " + portArgument);
 					break;
 				}
@@ -4056,9 +4064,11 @@
 			pData->bTriedActive = true;
 			pData->bTriedPasv = true;
 			pData->bPasv = true;
+#ifdef AF_INET6
 			if (GetAddressFamily() == AF_INET6)
 				cmd = _T("EPSV");
 			else
+#endif
 				cmd = _T("PASV");
 		}
 		break;
--- origsrc/filezilla-3.1.1.1/src/engine/misc.cpp	2008-08-11 09:29:03.000000000 -0500
+++ src/filezilla-3.1.1.1/src/engine/misc.cpp	2008-08-13 22:12:46.658025800 -0500
@@ -172,6 +172,7 @@
 
 bool IsRoutableAddress(const wxString& address, int family)
 {
+#ifdef AF_INET6
 	if (family == AF_INET6)
 	{
 		wxString long_address = GetIPV6LongForm(address);
@@ -227,6 +228,7 @@
 		return true;
 	}
 	else
+#endif
 	{
 		// Assumes address is already a valid IP address
 		if (address.Left(3) == _T("127") ||
--- origsrc/filezilla-3.1.1.1/src/engine/socket.cpp	2008-08-11 09:29:03.000000000 -0500
+++ src/filezilla-3.1.1.1/src/engine/socket.cpp	2008-08-13 22:29:44.869095800 -0500
@@ -24,6 +24,9 @@
   #include <netinet/in.h>
   #include <netinet/tcp.h>
 #endif
+#ifdef __CYGWIN__
+  #include <getaddrinfo.h>
+#endif
 
 // Fixups needed on FreeBSD
 #if !defined(EAI_ADDRFAMILY) && defined(EAI_FAMILY)
@@ -1328,8 +1331,10 @@
 
 	// IPv6 uses colons as separator, need to enclose address
 	// to avoid ambiguity if also showing port
+#ifdef AF_INET6
 	if (with_port && addr->sa_family == AF_INET6)
 		host = _T("[") + host + _T("]");
+#endif
 
 	if (with_port)
 		return host + _T(":") + port;
@@ -1500,11 +1505,13 @@
 		struct sockaddr_in* addr_v4 = (sockaddr_in*)&addr;
 		return ntohs(addr_v4->sin_port);
 	}
+#ifdef AF_INET6
 	else if (addr.ss_family == AF_INET6)
 	{
 		struct sockaddr_in6* addr_v6 = (sockaddr_in6*)&addr;
 		return ntohs(addr_v6->sin6_port);
 	}
+#endif
 
 	error = EINVAL;
 	return -1;
@@ -1528,11 +1535,13 @@
 		struct sockaddr_in* addr_v4 = (sockaddr_in*)&addr;
 		return ntohs(addr_v4->sin_port);
 	}
+#ifdef AF_INET6
 	else if (addr.ss_family == AF_INET6)
 	{
 		struct sockaddr_in6* addr_v6 = (sockaddr_in6*)&addr;
 		return ntohs(addr_v6->sin6_port);
 	}
+#endif
 
 	error = EINVAL;
 	return -1;
--- origsrc/filezilla-3.1.1.1/src/engine/transfersocket.cpp	2008-08-11 09:29:03.000000000 -0500
+++ src/filezilla-3.1.1.1/src/engine/transfersocket.cpp	2008-08-13 22:30:25.697220800 -0500
@@ -113,11 +113,13 @@
 	}
 
 	wxString portArguments;
+#ifdef AF_INET6
 	if (m_pSocketServer->GetAddressFamily() == AF_INET6)
 	{
 		portArguments = wxString::Format(_T("|2|%s|%d|"), ip.c_str(), port);
 	}
 	else
+#endif
 	{
 		portArguments = ip;
 		portArguments += wxString::Format(_T(",%d,%d"), port / 256, port % 256);
